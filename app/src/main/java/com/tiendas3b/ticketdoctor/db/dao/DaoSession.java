package com.tiendas3b.ticketdoctor.db.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.tiendas3b.ticketdoctor.db.dao.Ticket;
import com.tiendas3b.ticketdoctor.db.dao.TicketStatus;
import com.tiendas3b.ticketdoctor.db.dao.Action;
import com.tiendas3b.ticketdoctor.db.dao.User;
import com.tiendas3b.ticketdoctor.db.dao.Category;
import com.tiendas3b.ticketdoctor.db.dao.Type;
import com.tiendas3b.ticketdoctor.db.dao.ProjectStatus;
import com.tiendas3b.ticketdoctor.db.dao.Provider;
import com.tiendas3b.ticketdoctor.db.dao.Symptom;
import com.tiendas3b.ticketdoctor.db.dao.Diagnostic;
import com.tiendas3b.ticketdoctor.db.dao.TypeSymptom;
import com.tiendas3b.ticketdoctor.db.dao.SymptomDiagnostic;
import com.tiendas3b.ticketdoctor.db.dao.ImpCause;
import com.tiendas3b.ticketdoctor.db.dao.BranchType;
import com.tiendas3b.ticketdoctor.db.dao.Branch;
import com.tiendas3b.ticketdoctor.db.dao.StandardSolution;
import com.tiendas3b.ticketdoctor.db.dao.PossibleOrigin;
import com.tiendas3b.ticketdoctor.db.dao.Profile;
import com.tiendas3b.ticketdoctor.db.dao.Access;

import com.tiendas3b.ticketdoctor.db.dao.TicketDao;
import com.tiendas3b.ticketdoctor.db.dao.TicketStatusDao;
import com.tiendas3b.ticketdoctor.db.dao.ActionDao;
import com.tiendas3b.ticketdoctor.db.dao.UserDao;
import com.tiendas3b.ticketdoctor.db.dao.CategoryDao;
import com.tiendas3b.ticketdoctor.db.dao.TypeDao;
import com.tiendas3b.ticketdoctor.db.dao.ProjectStatusDao;
import com.tiendas3b.ticketdoctor.db.dao.ProviderDao;
import com.tiendas3b.ticketdoctor.db.dao.SymptomDao;
import com.tiendas3b.ticketdoctor.db.dao.DiagnosticDao;
import com.tiendas3b.ticketdoctor.db.dao.TypeSymptomDao;
import com.tiendas3b.ticketdoctor.db.dao.SymptomDiagnosticDao;
import com.tiendas3b.ticketdoctor.db.dao.ImpCauseDao;
import com.tiendas3b.ticketdoctor.db.dao.BranchTypeDao;
import com.tiendas3b.ticketdoctor.db.dao.BranchDao;
import com.tiendas3b.ticketdoctor.db.dao.StandardSolutionDao;
import com.tiendas3b.ticketdoctor.db.dao.PossibleOriginDao;
import com.tiendas3b.ticketdoctor.db.dao.ProfileDao;
import com.tiendas3b.ticketdoctor.db.dao.AccessDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig ticketDaoConfig;
    private final DaoConfig ticketStatusDaoConfig;
    private final DaoConfig actionDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig categoryDaoConfig;
    private final DaoConfig typeDaoConfig;
    private final DaoConfig projectStatusDaoConfig;
    private final DaoConfig providerDaoConfig;
    private final DaoConfig symptomDaoConfig;
    private final DaoConfig diagnosticDaoConfig;
    private final DaoConfig typeSymptomDaoConfig;
    private final DaoConfig symptomDiagnosticDaoConfig;
    private final DaoConfig impCauseDaoConfig;
    private final DaoConfig branchTypeDaoConfig;
    private final DaoConfig branchDaoConfig;
    private final DaoConfig standardSolutionDaoConfig;
    private final DaoConfig possibleOriginDaoConfig;
    private final DaoConfig profileDaoConfig;
    private final DaoConfig accessDaoConfig;

    private final TicketDao ticketDao;
    private final TicketStatusDao ticketStatusDao;
    private final ActionDao actionDao;
    private final UserDao userDao;
    private final CategoryDao categoryDao;
    private final TypeDao typeDao;
    private final ProjectStatusDao projectStatusDao;
    private final ProviderDao providerDao;
    private final SymptomDao symptomDao;
    private final DiagnosticDao diagnosticDao;
    private final TypeSymptomDao typeSymptomDao;
    private final SymptomDiagnosticDao symptomDiagnosticDao;
    private final ImpCauseDao impCauseDao;
    private final BranchTypeDao branchTypeDao;
    private final BranchDao branchDao;
    private final StandardSolutionDao standardSolutionDao;
    private final PossibleOriginDao possibleOriginDao;
    private final ProfileDao profileDao;
    private final AccessDao accessDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        ticketDaoConfig = daoConfigMap.get(TicketDao.class).clone();
        ticketDaoConfig.initIdentityScope(type);

        ticketStatusDaoConfig = daoConfigMap.get(TicketStatusDao.class).clone();
        ticketStatusDaoConfig.initIdentityScope(type);

        actionDaoConfig = daoConfigMap.get(ActionDao.class).clone();
        actionDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        typeDaoConfig = daoConfigMap.get(TypeDao.class).clone();
        typeDaoConfig.initIdentityScope(type);

        projectStatusDaoConfig = daoConfigMap.get(ProjectStatusDao.class).clone();
        projectStatusDaoConfig.initIdentityScope(type);

        providerDaoConfig = daoConfigMap.get(ProviderDao.class).clone();
        providerDaoConfig.initIdentityScope(type);

        symptomDaoConfig = daoConfigMap.get(SymptomDao.class).clone();
        symptomDaoConfig.initIdentityScope(type);

        diagnosticDaoConfig = daoConfigMap.get(DiagnosticDao.class).clone();
        diagnosticDaoConfig.initIdentityScope(type);

        typeSymptomDaoConfig = daoConfigMap.get(TypeSymptomDao.class).clone();
        typeSymptomDaoConfig.initIdentityScope(type);

        symptomDiagnosticDaoConfig = daoConfigMap.get(SymptomDiagnosticDao.class).clone();
        symptomDiagnosticDaoConfig.initIdentityScope(type);

        impCauseDaoConfig = daoConfigMap.get(ImpCauseDao.class).clone();
        impCauseDaoConfig.initIdentityScope(type);

        branchTypeDaoConfig = daoConfigMap.get(BranchTypeDao.class).clone();
        branchTypeDaoConfig.initIdentityScope(type);

        branchDaoConfig = daoConfigMap.get(BranchDao.class).clone();
        branchDaoConfig.initIdentityScope(type);

        standardSolutionDaoConfig = daoConfigMap.get(StandardSolutionDao.class).clone();
        standardSolutionDaoConfig.initIdentityScope(type);

        possibleOriginDaoConfig = daoConfigMap.get(PossibleOriginDao.class).clone();
        possibleOriginDaoConfig.initIdentityScope(type);

        profileDaoConfig = daoConfigMap.get(ProfileDao.class).clone();
        profileDaoConfig.initIdentityScope(type);

        accessDaoConfig = daoConfigMap.get(AccessDao.class).clone();
        accessDaoConfig.initIdentityScope(type);

        ticketDao = new TicketDao(ticketDaoConfig, this);
        ticketStatusDao = new TicketStatusDao(ticketStatusDaoConfig, this);
        actionDao = new ActionDao(actionDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        categoryDao = new CategoryDao(categoryDaoConfig, this);
        typeDao = new TypeDao(typeDaoConfig, this);
        projectStatusDao = new ProjectStatusDao(projectStatusDaoConfig, this);
        providerDao = new ProviderDao(providerDaoConfig, this);
        symptomDao = new SymptomDao(symptomDaoConfig, this);
        diagnosticDao = new DiagnosticDao(diagnosticDaoConfig, this);
        typeSymptomDao = new TypeSymptomDao(typeSymptomDaoConfig, this);
        symptomDiagnosticDao = new SymptomDiagnosticDao(symptomDiagnosticDaoConfig, this);
        impCauseDao = new ImpCauseDao(impCauseDaoConfig, this);
        branchTypeDao = new BranchTypeDao(branchTypeDaoConfig, this);
        branchDao = new BranchDao(branchDaoConfig, this);
        standardSolutionDao = new StandardSolutionDao(standardSolutionDaoConfig, this);
        possibleOriginDao = new PossibleOriginDao(possibleOriginDaoConfig, this);
        profileDao = new ProfileDao(profileDaoConfig, this);
        accessDao = new AccessDao(accessDaoConfig, this);

        registerDao(Ticket.class, ticketDao);
        registerDao(TicketStatus.class, ticketStatusDao);
        registerDao(Action.class, actionDao);
        registerDao(User.class, userDao);
        registerDao(Category.class, categoryDao);
        registerDao(Type.class, typeDao);
        registerDao(ProjectStatus.class, projectStatusDao);
        registerDao(Provider.class, providerDao);
        registerDao(Symptom.class, symptomDao);
        registerDao(Diagnostic.class, diagnosticDao);
        registerDao(TypeSymptom.class, typeSymptomDao);
        registerDao(SymptomDiagnostic.class, symptomDiagnosticDao);
        registerDao(ImpCause.class, impCauseDao);
        registerDao(BranchType.class, branchTypeDao);
        registerDao(Branch.class, branchDao);
        registerDao(StandardSolution.class, standardSolutionDao);
        registerDao(PossibleOrigin.class, possibleOriginDao);
        registerDao(Profile.class, profileDao);
        registerDao(Access.class, accessDao);
    }
    
    public void clear() {
        ticketDaoConfig.getIdentityScope().clear();
        ticketStatusDaoConfig.getIdentityScope().clear();
        actionDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        categoryDaoConfig.getIdentityScope().clear();
        typeDaoConfig.getIdentityScope().clear();
        projectStatusDaoConfig.getIdentityScope().clear();
        providerDaoConfig.getIdentityScope().clear();
        symptomDaoConfig.getIdentityScope().clear();
        diagnosticDaoConfig.getIdentityScope().clear();
        typeSymptomDaoConfig.getIdentityScope().clear();
        symptomDiagnosticDaoConfig.getIdentityScope().clear();
        impCauseDaoConfig.getIdentityScope().clear();
        branchTypeDaoConfig.getIdentityScope().clear();
        branchDaoConfig.getIdentityScope().clear();
        standardSolutionDaoConfig.getIdentityScope().clear();
        possibleOriginDaoConfig.getIdentityScope().clear();
        profileDaoConfig.getIdentityScope().clear();
        accessDaoConfig.getIdentityScope().clear();
    }

    public TicketDao getTicketDao() {
        return ticketDao;
    }

    public TicketStatusDao getTicketStatusDao() {
        return ticketStatusDao;
    }

    public ActionDao getActionDao() {
        return actionDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public TypeDao getTypeDao() {
        return typeDao;
    }

    public ProjectStatusDao getProjectStatusDao() {
        return projectStatusDao;
    }

    public ProviderDao getProviderDao() {
        return providerDao;
    }

    public SymptomDao getSymptomDao() {
        return symptomDao;
    }

    public DiagnosticDao getDiagnosticDao() {
        return diagnosticDao;
    }

    public TypeSymptomDao getTypeSymptomDao() {
        return typeSymptomDao;
    }

    public SymptomDiagnosticDao getSymptomDiagnosticDao() {
        return symptomDiagnosticDao;
    }

    public ImpCauseDao getImpCauseDao() {
        return impCauseDao;
    }

    public BranchTypeDao getBranchTypeDao() {
        return branchTypeDao;
    }

    public BranchDao getBranchDao() {
        return branchDao;
    }

    public StandardSolutionDao getStandardSolutionDao() {
        return standardSolutionDao;
    }

    public PossibleOriginDao getPossibleOriginDao() {
        return possibleOriginDao;
    }

    public ProfileDao getProfileDao() {
        return profileDao;
    }

    public AccessDao getAccessDao() {
        return accessDao;
    }

}
